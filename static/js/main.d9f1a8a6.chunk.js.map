{"version":3,"sources":["components/DiceViewer.tsx","utilities/data.ts","components/ControlPanel.tsx","components/Resets.tsx","components/ResetAll.tsx","components/TotalViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DiceViewer","rolled100Value","rolled20Value","rolled12Value","rolled10Value","rolled8Value","rolled6Value","rolled4Value","Row","Col","className","roll","sides","Math","floor","random","ControlPanel","total100Value","total20Value","total12Value","total10Value","total8Value","total6Value","total4Value","set100","set20","set12","set10","set8","set6","set4","get100","get20","get12","get10","get8","get6","get4","useState","num100","setNum100","num20","setNum20","num12","setNum12","num10","setNum10","num8","setNum8","num6","setNum6","num4","setNum4","getNumber","value","defaultValue","num","parseInt","isNaN","id","type","placeholder","onChange","event","target","Button","onClick","tmp100","tempTotal100","rollHold100","i","tmp20","tempTotal20","rollHold20","tmp12","tempTotal12","rollHold12","tmp10","tempTotal10","rollHold10","tmp8","tempTotal8","rollHold8","tmp6","tempTotal6","rollHold6","tmp4","tempTotal4","rollHold4","Resets","ResetAll","setTotal100","setTotal20","setTotal12","setTotal10","setTotal8","setTotal6","setTotal4","TotalViewer","temp","mod100","setMod100","mod20","setMod20","mod12","setMod12","mod10","setMod10","mod8","setMod8","mod6","setMod6","mod4","setMod4","App","now100","setNow100","now20","setNow20","now12","setNow12","now10","setNow10","now8","setNow8","now6","setNow6","now4","setNow4","total100","total20","total12","total10","total8","total6","total4","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAGO,SAASA,EAAT,GAQa,IARSC,EAQV,EARUA,eAAgBC,EAQ1B,EAR0BA,cAAeC,EAQzC,EARyCA,cAAeC,EAQxD,EARwDA,cAAeC,EAQvE,EARuEA,aAAcC,EAQrF,EARqFA,aAAcC,EAQnG,EARmGA,aAUlH,OAAO,eAACC,EAAA,EAAD,WACH,cAACC,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,MAAxC,SAA+CT,MACpD,cAACQ,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,KAAxC,SAA8CR,MACnD,cAACO,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,KAAxC,SAA8CP,MACnD,cAACM,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,KAAxC,SAA8CN,MACnD,cAACK,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,IAAxC,SAA6CL,MAClD,cAACI,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,IAAxC,SAA6CJ,MAClD,cAACG,EAAA,EAAD,UAAK,oBAAIC,UAAU,cAAc,cAAY,IAAxC,SAA6CH,S,oBCnBnD,SAASI,EAAMC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAASH,GAAO,ECQpC,SAASI,EAAT,GAuBU,IAvBcC,EAuBf,EAvBeA,cAAeC,EAuB9B,EAvB8BA,aAAcC,EAuB5C,EAvB4CA,aAAcC,EAuB1D,EAvB0DA,aAAcC,EAuBxE,EAvBwEA,YAAaC,EAuBrF,EAvBqFA,YAAaC,EAuBlG,EAvBkGA,YAAaC,EAuB/G,EAvB+GA,OAAQC,EAuBvH,EAvBuHA,MAAOC,EAuB9H,EAvB8HA,MAAOC,EAuBrI,EAvBqIA,MAAOC,EAuB5I,EAvB4IA,KAAMC,EAuBlJ,EAvBkJA,KAAMC,EAuBxJ,EAvBwJA,KAAMC,EAuB9J,EAvB8JA,OAAQC,EAuBtK,EAvBsKA,MAAOC,EAuB7K,EAvB6KA,MAAOC,EAuBpL,EAvBoLA,MAAOC,EAuB3L,EAvB2LA,KAAMC,EAuBjM,EAvBiMA,KAAMC,EAuBvM,EAvBuMA,KAwBnN,EAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAiB,IAA3C,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAiB,IAA3C,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwBR,mBAAiB,IAAzC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAwBV,mBAAiB,IAAzC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,mBAAiB,IAAzC,oBAAOa,GAAP,MAAaC,GAAb,MAUA,SAASC,GAAUC,EAA8BC,GAC7C,GAAa,MAATD,EAAe,CACf,IAAME,EAAMC,SAASH,EAAO,IAC5B,OAAOI,MAAMF,GAAOD,EAAeC,EAGnC,OAAOD,EA6If,OAAO,eAAC/C,EAAA,EAAD,WACH,eAACC,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,YAAtC,oBAEJ,uBAAOA,GAAG,SAASC,KAAK,OAAOC,YAAY,IAAI,aAAW,YAAY,mBAAiB,YAAYnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWvB,EAAUuB,EAAMC,OAAOV,QAAQA,MAAOf,OAE3L,cAAC0B,EAAA,EAAD,CAAQ,cAAY,aAAaC,QAjJzC,WAiBI,IAHA,IAAMC,EAASd,GAAUd,EAAQ,GAC7B6B,EAAe,EACfC,EAAe,EACVC,EAAE,EAAGA,EAAEH,EAAQG,IAEpBF,GADAC,EAAc1D,EAAK,KAIvBa,EADgB6C,GAEhBtC,EAAOqC,EAAanD,IA0HqCP,UAAU,MAA/D,qBAEJ,eAACD,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,WAAtC,mBAEJ,uBAAOA,GAAG,QAAQC,KAAK,OAAOC,YAAY,IAAI,aAAW,WAAW,mBAAiB,WAAWnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWrB,EAASqB,EAAMC,OAAOV,QAAQA,MAAOb,OAEvL,cAACwB,EAAA,EAAD,CAAQ,cAAY,YAAYC,QAjIxC,WAYI,IAHA,IAAMK,EAAQlB,GAAUZ,EAAO,GAC3B+B,EAAc,EACdC,EAAc,EACTH,EAAE,EAAGA,EAAEC,EAAOD,IAEnBE,GADAC,EAAa9D,EAAK,IAItBc,EADegD,GAEfzC,EAAMwC,EAAYtD,IA+GqCR,UAAU,MAA7D,oBAEJ,eAACD,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,WAAtC,mBAEJ,uBAAOA,GAAG,QAAQC,KAAK,OAAOC,YAAY,IAAI,aAAW,WAAW,mBAAiB,WAAWnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWnB,EAASmB,EAAMC,OAAOV,QAAQA,MAAOX,OAEvL,cAACsB,EAAA,EAAD,CAAQ,cAAY,YAAYC,QAtHxC,WAYI,IAHA,IAAMQ,EAAQrB,GAAUV,EAAO,GAC3BgC,EAAc,EACdC,EAAc,EACTN,EAAE,EAAGA,EAAEI,EAAOJ,IAEnBK,GADAC,EAAajE,EAAK,IAItBe,EADekD,GAEf3C,EAAM0C,EAAYxD,IAoGqCT,UAAU,MAA7D,oBAEJ,eAACD,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,WAAtC,mBAEJ,uBAAOA,GAAG,QAAQC,KAAK,OAAOC,YAAY,IAAI,aAAW,WAAW,mBAAiB,WAAWnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWjB,EAASiB,EAAMC,OAAOV,QAAQA,MAAOT,OAEvL,cAACoB,EAAA,EAAD,CAAQ,cAAY,YAAYC,QA3GxC,WAYI,IAHA,IAAMW,EAAQxB,GAAUR,EAAO,GAC3BiC,EAAc,EACdC,EAAc,EACTT,EAAE,EAAGA,EAAEO,EAAOP,IAEnBQ,GADAC,EAAapE,EAAK,IAItBgB,EADeoD,GAEf7C,EAAM4C,EAAY1D,IAyFqCV,UAAU,MAA7D,oBAEJ,eAACD,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,UAAtC,kBAEJ,uBAAOA,GAAG,OAAOC,KAAK,OAAOC,YAAY,IAAI,aAAW,UAAU,mBAAiB,UAAUnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWf,EAAQe,EAAMC,OAAOV,QAAQA,MAAOP,OAEnL,cAACkB,EAAA,EAAD,CAAQ,cAAY,WAAWC,QAhGvC,WAWI,IAHA,IAAMc,EAAO3B,GAAUN,EAAM,GACzBkC,EAAa,EACbC,EAAa,EACRZ,EAAE,EAAGA,EAAEU,EAAMV,IAElBW,GADAC,EAAYvE,EAAK,GAIrBiB,EADcsD,GAEd/C,EAAK8C,EAAW5D,IA+EqCX,UAAU,MAA3D,mBAEJ,eAACD,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,UAAtC,kBAEJ,uBAAOA,GAAG,OAAOC,KAAK,OAAOC,YAAY,IAAI,aAAW,UAAU,mBAAiB,UAAUnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWb,EAAQa,EAAMC,OAAOV,QAAQA,MAAOL,OAEnL,cAACgB,EAAA,EAAD,CAAQ,cAAY,WAAWC,QAtFvC,WAYI,IAHA,IAAMiB,EAAO9B,GAAUJ,EAAM,GACzBmC,EAAa,EACbC,EAAa,EACRf,EAAE,EAAGA,EAAEa,EAAMb,IAElBc,GADAC,EAAY1E,EAAK,GAIrBkB,EADcwD,GAEdjD,EAAKgD,EAAW9D,IAoEqCZ,UAAU,MAA3D,mBAEJ,eAACD,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,UAAtC,kBAEJ,uBAAOA,GAAG,OAAOC,KAAK,OAAOC,YAAY,IAAI,aAAW,UAAU,mBAAiB,UAAUnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWX,GAAQW,EAAMC,OAAOV,QAAQA,MAAOH,QAEnL,cAACc,EAAA,EAAD,CAAQ,cAAY,WAAWC,QA3EvC,WAKI,IAHA,IAAMoB,EAAOjC,GAAUF,GAAM,GACzBoC,EAAa,EACbC,EAAa,EACRlB,EAAE,EAAGA,EAAEgB,EAAMhB,IAElBiB,GADAC,EAAY7E,EAAK,GAIrBmB,EADc0D,GAEdnD,EAAKkD,EAAWhE,IAgEqCb,UAAU,MAA3D,sB,MCjQL,SAAS+E,EAAT,GAQU,IARQjE,EAQT,EARSA,OAAQC,EAQjB,EARiBA,MAAOC,EAQxB,EARwBA,MAAOC,EAQ/B,EAR+BA,MAAOC,EAQtC,EARsCA,KAAMC,EAQ5C,EAR4CA,KAAMC,EAQlD,EARkDA,KA8B9D,OAAO,eAACtB,EAAA,EAAD,WACH,cAACC,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,mBAAmBC,QAtBhD,WACI1C,EAAO,IAqByDd,UAAU,MAArE,0BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,kBAAkBC,QApB/C,WACIzC,EAAM,IAmBwDf,UAAU,MAAnE,yBACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,kBAAkBC,QAlB/C,WACIxC,EAAM,IAiBwDhB,UAAU,MAAnE,yBACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,kBAAkBC,QAhB/C,WACIvC,EAAM,IAewDjB,UAAU,MAAnE,yBACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,iBAAiBC,QAd9C,WACItC,EAAK,IAauDlB,UAAU,MAAjE,wBACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,iBAAiBC,QAZ9C,WACIrC,EAAK,IAWuDnB,UAAU,MAAjE,wBACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,iBAAiBC,QAV9C,WACIpC,EAAK,IASuDpB,UAAU,MAAjE,2BCrCN,SAASgF,EAAT,GAeU,IAfUlE,EAeX,EAfWA,OAAQC,EAenB,EAfmBA,MAAOC,EAe1B,EAf0BA,MAAOC,EAejC,EAfiCA,MAAOC,EAexC,EAfwCA,KAAMC,EAe9C,EAf8CA,KAAMC,EAepD,EAfoDA,KAAMC,EAe1D,EAf0DA,OAAQC,EAelE,EAfkEA,MAAOC,EAezE,EAfyEA,MAAOC,EAehF,EAfgFA,MAAOC,EAevF,EAfuFA,KAAMC,EAe7F,EAf6FA,KAAMC,EAenG,EAfmGA,KAqC/G,SAASsD,IACL5D,EAAO,GAEX,SAAS6D,IACL5D,EAAM,GAEV,SAAS6D,IACL5D,EAAM,GAEV,SAAS6D,IACL5D,EAAM,GAEV,SAAS6D,IACL5D,EAAK,GAET,SAAS6D,IACL5D,EAAK,GAET,SAAS6D,IACL5D,EAAK,GAET,OAAO,eAAC7B,EAAA,EAAD,WACH,eAACA,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,yBAAyBC,QAASyB,EAAajF,UAAU,MAA7E,+BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,wBAAwBC,QAAS0B,EAAYlF,UAAU,MAA3E,8BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,wBAAwBC,QAAS2B,EAAYnF,UAAU,MAA3E,8BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,wBAAwBC,QAAS4B,EAAYpF,UAAU,MAA3E,8BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,uBAAuBC,QAAS6B,EAAWrF,UAAU,MAAzE,6BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,uBAAuBC,QAAS8B,EAAWtF,UAAU,MAAzE,6BACL,cAACD,EAAA,EAAD,UAAK,cAACwD,EAAA,EAAD,CAAQ,cAAY,uBAAuBC,QAAS+B,EAAWvF,UAAU,MAAzE,gCAEL,cAACF,EAAA,EAAD,UAAK,cAACyD,EAAA,EAAD,CAAQ,cAAY,mBAAmBC,QAAS,WAnDrD1C,EAAO,GAGPC,EAAM,GAGNC,EAAM,GAGNC,EAAM,GAGNC,EAAK,GAGLC,EAAK,GAGLC,EAAK,GAiCyI6D,IAAeC,IAAcC,IAAcC,IAAcC,IAAaC,IAAaC,KAA5N,4BCnEN,SAASC,EAAT,GAQa,IARUjF,EAQX,EARWA,cAAeC,EAQ1B,EAR0BA,aAAcC,EAQxC,EARwCA,aAAcC,EAQtD,EARsDA,aAAcC,EAQpE,EARoEA,YAAaC,EAQjF,EARiFA,YAAaC,EAQ9F,EAR8FA,YAS7G,SAAS8B,EAAUC,EAA8BC,GAC7C,GAAa,MAATD,EAAe,CACf,IAAME,EAAMC,SAASH,EAAO,IAC5B,OAAOI,MAAMF,GAAOD,EAAeC,EAGnC,OAAOD,EAIf,IAAM4C,EAAOlF,EAAcC,EAAaC,EAAaC,EAAaC,EAAYC,EAAYC,EAE1F,EAA4Be,mBAAiB,IAA7C,mBAAO8D,EAAP,KAAeC,EAAf,KACA,EAA0B/D,mBAAiB,IAA3C,mBAAOgE,EAAP,KAAcC,EAAd,KACA,EAA0BjE,mBAAiB,IAA3C,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAA0BnE,mBAAiB,IAA3C,mBAAOoE,EAAP,KAAcC,EAAd,KACA,EAAwBrE,mBAAiB,IAAzC,mBAAOsE,EAAP,KAAaC,EAAb,KACA,EAAwBvE,mBAAiB,IAAzC,mBAAOwE,EAAP,KAAaC,EAAb,KACA,EAAwBzE,mBAAiB,IAAzC,mBAAO0E,EAAP,KAAaC,EAAb,KAgBA,OAAO,eAACzG,EAAA,EAAD,WACH,eAACC,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,YAAtC,oBAEJ,uBAAOA,GAAG,SAASC,KAAK,OAAOC,YAAY,IAAI,aAAW,YAAY,mBAAiB,YAAYnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWsC,EAAUtC,EAAMC,OAAOV,QAAQA,MAAO8C,OAE3L,oBAAI1F,UAAU,cAAc,cAAY,YAAxC,SAAqDO,EAAcoC,EAAU+C,EAAO,QAGxF,eAAC3F,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,WAAtC,oBAEJ,uBAAOA,GAAG,QAAQC,KAAK,OAAOC,YAAY,IAAI,aAAW,WAAW,mBAAiB,WAAWnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWwC,EAASxC,EAAMC,OAAOV,QAAQA,MAAOgD,OAEvL,oBAAI5F,UAAU,cAAc,cAAY,WAAxC,SAAoDQ,EAAamC,EAAUiD,EAAM,QAGrF,eAAC7F,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,WAAtC,oBAEJ,uBAAOA,GAAG,QAAQC,KAAK,OAAOC,YAAY,IAAI,aAAW,WAAW,mBAAiB,WAAWnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAW0C,EAAS1C,EAAMC,OAAOV,QAAQA,MAAOkD,OAEvL,oBAAI9F,UAAU,cAAc,cAAY,WAAxC,SAAoDS,EAAakC,EAAUmD,EAAM,QAGrF,eAAC/F,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,WAAtC,oBAEJ,uBAAOA,GAAG,QAAQC,KAAK,OAAOC,YAAY,IAAI,aAAW,WAAW,mBAAiB,WAAWnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAW4C,EAAS5C,EAAMC,OAAOV,QAAQA,MAAOoD,OAEvL,oBAAIhG,UAAU,cAAc,cAAY,WAAxC,SAAoDU,EAAaiC,EAAUqD,EAAM,QAGrF,eAACjG,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,UAAtC,oBAEJ,uBAAOA,GAAG,OAAOC,KAAK,OAAOC,YAAY,IAAI,aAAW,UAAU,mBAAiB,UAAUnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAW8C,EAAQ9C,EAAMC,OAAOV,QAAQA,MAAOsD,OAEnL,oBAAIlG,UAAU,cAAc,cAAY,UAAxC,SAAmDW,EAAYgC,EAAUuD,EAAK,QAGlF,eAACnG,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,UAAtC,oBAEJ,uBAAOA,GAAG,OAAOC,KAAK,OAAOC,YAAY,IAAI,aAAW,UAAU,mBAAiB,UAAUnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWgD,EAAQhD,EAAMC,OAAOV,QAAQA,MAAOwD,OAEnL,oBAAIpG,UAAU,cAAc,cAAY,UAAxC,SAAmDY,EAAY+B,EAAUyD,EAAK,QAGlF,eAACrG,EAAA,EAAD,WACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBiD,GAAG,UAAtC,oBAEJ,uBAAOA,GAAG,OAAOC,KAAK,OAAOC,YAAY,IAAI,aAAW,UAAU,mBAAiB,UAAUnD,UAAU,eAAeoD,SAAU,SAACC,GAAD,OAAWkD,EAAQlD,EAAMC,OAAOV,QAAQA,MAAO0D,OAEnL,oBAAItG,UAAU,cAAc,cAAY,UAAxC,SAAmDa,EAAY8B,EAAU2D,EAAK,QAGlF,cAACxG,EAAA,EAAD,UACI,oBAAIE,UAAU,cAAc,cAAY,cAAxC,SAAuDyF,EAAK9C,EAAU+C,EAAO,GAAG/C,EAAUiD,EAAM,GAAGjD,EAAUmD,EAAM,GAAGnD,EAAUqD,EAAM,GAAGrD,EAAUuD,EAAK,GAAGvD,EAAUyD,EAAK,GAAGzD,EAAU2D,EAAK,UC5CzLE,MAxCf,WACE,MAA4B5E,mBAAiB,GAA7C,mBAAO6E,EAAP,KAAeC,EAAf,KACA,EAA0B9E,mBAAiB,GAA3C,mBAAO+E,EAAP,KAAcC,EAAd,KACA,EAA0BhF,mBAAiB,GAA3C,mBAAOiF,EAAP,KAAcC,EAAd,KACA,EAA0BlF,mBAAiB,GAA3C,mBAAOmF,EAAP,KAAcC,EAAd,KACA,EAAwBpF,mBAAiB,GAAzC,mBAAOqF,EAAP,KAAaC,EAAb,KACA,EAAwBtF,mBAAiB,GAAzC,mBAAOuF,EAAP,KAAaC,EAAb,KACA,EAAwBxF,mBAAiB,GAAzC,mBAAOyF,EAAP,KAAaC,EAAb,KAEA,EAAgC1F,mBAAiB,GAAjD,mBAAO2F,EAAP,KAAiBtC,EAAjB,KACA,EAA8BrD,mBAAiB,GAA/C,mBAAO4F,EAAP,KAAgBtC,EAAhB,KACA,EAA8BtD,mBAAiB,GAA/C,mBAAO6F,EAAP,KAAgBtC,EAAhB,KACA,EAA8BvD,mBAAiB,GAA/C,mBAAO8F,EAAP,KAAgBtC,EAAhB,KACA,GAA4BxD,mBAAiB,GAA7C,qBAAO+F,GAAP,MAAetC,GAAf,MACA,GAA4BzD,mBAAiB,GAA7C,qBAAOgG,GAAP,MAAetC,GAAf,MACA,GAA4B1D,mBAAiB,GAA7C,qBAAOiG,GAAP,MAAetC,GAAf,MAEA,OAWE,aAVA,CAUCuC,EAAA,EAAD,UACE,eAAChI,EAAA,EAAD,WACA,cAACR,EAAD,CAAYC,eAAgBkH,EAAQjH,cAAemH,EAAOlH,cAAeoH,EAAOnH,cAAeqH,EAAOpH,aAAcsH,EAAMrH,aAAcuH,EAAMtH,aAAcwH,IAC5J,cAAC/G,EAAD,CAAcC,cAAegH,EAAU/G,aAAcgH,EAAS/G,aAAcgH,EAAS/G,aAAcgH,EAAS/G,YAAagH,GAAQ/G,YAAagH,GAAQ/G,YAAagH,GAAQ/G,OAAQ4F,EAAW3F,MAAO6F,EAAU5F,MAAO8F,EAAU7F,MAAO+F,EAAU9F,KAAMgG,EAAS/F,KAAMiG,EAAShG,KAAMkG,EAASjG,OAAQ4D,EAAa3D,MAAO4D,EAAY3D,MAAO4D,EAAY3D,MAAO4D,EAAY3D,KAAM4D,GAAW3D,KAAM4D,GAAW3D,KAAM4D,KACpZ,cAACR,EAAD,CAAQjE,OAAQ4F,EAAW3F,MAAO6F,EAAU5F,MAAO8F,EAAU7F,MAAO+F,EAAU9F,KAAMgG,EAAS/F,KAAMiG,EAAShG,KAAMkG,IAClH,cAAC9B,EAAD,CAAajF,cAAegH,EAAU/G,aAAcgH,EAAS/G,aAAcgH,EAAS/G,aAAcgH,EAAS/G,YAAagH,GAAQ/G,YAAagH,GAAQ/G,YAAagH,KAClK,cAAC7C,EAAD,CAAUlE,OAAQ4F,EAAW3F,MAAO6F,EAAU5F,MAAO8F,EAAU7F,MAAO+F,EAAU9F,KAAMgG,EAAS/F,KAAMiG,EAAShG,KAAMkG,EAASjG,OAAQ4D,EAAa3D,MAAO4D,EAAY3D,MAAO4D,EAAY3D,MAAO4D,EAAY3D,KAAM4D,GAAW3D,KAAM4D,GAAW3D,KAAM4D,WCtD1OwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9f1a8a6.chunk.js","sourcesContent":["import { Row, Col} from \"react-bootstrap\";\n//import { useState } from \"react\";\n\nexport function DiceViewer ({rolled100Value, rolled20Value, rolled12Value, rolled10Value, rolled8Value, rolled6Value, rolled4Value}: {\n    rolled100Value: number,\n    rolled20Value: number,\n    rolled12Value: number,\n    rolled10Value: number,\n    rolled8Value: number,\n    rolled6Value: number,\n    rolled4Value: number\n}   ): JSX.Element {\n    //const [zero100, reset100] = useState<number()\n    return <Row>\n        <Col><h3 className=\"text-center\" data-testid=\"100\">{rolled100Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"20\">{rolled20Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"12\">{rolled12Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"10\">{rolled10Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"8\">{rolled8Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"6\">{rolled6Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"4\">{rolled4Value}</h3></Col>\n    </Row>\n}","// picks a random number?\nexport function roll (sides: number): number {\n    return Math.floor(Math.random()*sides)+1;\n}","//import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\nimport { Button, Row, Col} from 'react-bootstrap';\n//import { Die } from '../interfaces/die';\nimport { roll } from '../utilities/data';\nimport { useState } from 'react';\n//import { HowMany } from './HowMany';\n\n// Textbox stuff learned from: https://getbootstrap.com/docs/4.0/components/input-group/\n// Input manipulation learned from: https://stackoverflow.com/questions/22552109/how-do-i-successfully-manipulate-numbers-taken-from-user-input-html-javascript\n\nexport function ControlPanel ({total100Value, total20Value, total12Value, total10Value, total8Value, total6Value, total4Value, set100, set20, set12, set10, set8, set6, set4, get100, get20, get12, get10, get8, get6, get4}:\n{\n    total100Value: number,\n    total20Value: number,\n    total12Value: number,\n    total10Value: number,\n    total8Value: number,\n    total6Value: number,\n    total4Value: number,\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void,\n    get100: (num100: number) => void,\n    get20: (num20: number) => void,\n    get12: (num12: number) => void,\n    get10: (num10: number) => void,\n    get8: (num8: number) => void,\n    get6: (num6: number) => void,\n    get4: (num4: number) => void\n}): JSX.Element {\n    const [num100, setNum100] = useState<string>(\"\");\n    const [num20, setNum20] = useState<string>(\"\");\n    const [num12, setNum12] = useState<string>(\"\");\n    const [num10, setNum10] = useState<string>(\"\");\n    const [num8, setNum8] = useState<string>(\"\");\n    const [num6, setNum6] = useState<string>(\"\");\n    const [num4, setNum4] = useState<string>(\"\");\n\n    //const num100 = 1;\n    //const num20 = 1;\n    //const num12 = 1;\n    //const num10 = 1;\n    //const num8 = 1;\n    //const num6 = 1;\n    //const num4 = 1;\n\n    function getNumber(value: string|null|undefined, defaultValue: number): number {\n        if (value != null) {\n            const num = parseInt(value, 10);\n            return isNaN(num) ? defaultValue : num;\n        }\n        else {\n            return defaultValue;\n        }\n    }\n\n    function setNow100() {\n        //const temp = document.getElementById(\"num100\")?.textContent;\n        //const num100 = getNumber(temp, 1);\n        //if (num100==null || num100<1) {\n            //const temp100 = roll(100);\n            //set100(temp100)\n            //get100(temp100+total100Value)\n        //}\n        /*\n        for (let i=0; i<num100; i++) {\n            const temp100 = roll(100);\n            set100(temp100)\n            get100(temp100+total100Value)\n        }*/\n        const tmp100 = getNumber(num100, 1);\n        let tempTotal100 = 0;\n        let rollHold100 =  0;\n        for (let i=0; i<tmp100; i++) {\n            rollHold100 = roll(100);\n            tempTotal100 = tempTotal100 + rollHold100;\n        }\n        const temp100 = rollHold100;\n        set100(temp100)\n        get100(tempTotal100+total100Value)\n    }\n    function setNow20() {\n        /*\n        const temp = document.getElementById(\"num20\")?.textContent;\n        const num20 = getNumber(temp, 1);\n        for (let i=0; i<num20; i++) {\n            const temp20 = roll(20);\n            set20(temp20)\n            get20(temp20+total20Value)\n        }*/\n        const tmp20 = getNumber(num20, 1);\n        let tempTotal20 = 0;\n        let rollHold20 =  0;\n        for (let i=0; i<tmp20; i++) {\n            rollHold20 = roll(20);\n            tempTotal20 = tempTotal20 + rollHold20;\n        }\n        const temp20 = rollHold20;\n        set20(temp20)\n        get20(tempTotal20+total20Value)\n    }\n    function setNow12() {\n        /*\n        const temp = document.getElementById(\"num12\")?.textContent;\n        const num12 = getNumber(temp, 1);\n        for (let i=0; i<num12; i++) {\n            const temp12 = roll(12);\n            set12(temp12)\n            get12(temp12+total12Value)\n        }*/\n        const tmp12 = getNumber(num12, 1);\n        let tempTotal12 = 0;\n        let rollHold12 =  0;\n        for (let i=0; i<tmp12; i++) {\n            rollHold12 = roll(12);\n            tempTotal12 = tempTotal12 + rollHold12;\n        }\n        const temp12 = rollHold12;\n        set12(temp12)\n        get12(tempTotal12+total12Value)\n    }\n    function setNow10() {\n        /*\n        const temp = document.getElementById(\"num10\")?.textContent;\n        const num10 = getNumber(temp, 1);\n        for (let i=0; i<num10; i++) {\n            const temp10 = roll(10);\n            set10(temp10)\n            get10(temp10+total10Value)\n        }*/\n        const tmp10 = getNumber(num10, 1);\n        let tempTotal10 = 0;\n        let rollHold10 =  0;\n        for (let i=0; i<tmp10; i++) {\n            rollHold10 = roll(10);\n            tempTotal10 = tempTotal10 + rollHold10;\n        }\n        const temp10 = rollHold10;\n        set10(temp10)\n        get10(tempTotal10+total10Value)\n    }\n    function setNow8() { /*\n        const temp = document.getElementById(\"num8\")?.textContent;\n        const num8 = getNumber(temp, 1);\n        for (let i=0; i<num8; i++) {\n            const temp8 = roll(8);\n            set8(temp8)\n            get8(temp8+total8Value)\n        }*/\n        const tmp8 = getNumber(num8, 1);\n        let tempTotal8 = 0;\n        let rollHold8 =  0;\n        for (let i=0; i<tmp8; i++) {\n            rollHold8 = roll(8);\n            tempTotal8 = tempTotal8 + rollHold8;\n        }\n        const temp8 = rollHold8;\n        set8(temp8)\n        get8(tempTotal8+total8Value)\n    }\n    function setNow6() {\n        /*\n        const temp = document.getElementById(\"num6\")?.textContent;\n        const num6 = getNumber(temp, 1);\n        for (let i=0; i<num6; i++) {\n            const temp6 = roll(6);\n            set6(temp6)\n            get6(temp6+total6Value)\n        }*/\n        const tmp6 = getNumber(num6, 1);\n        let tempTotal6 = 0;\n        let rollHold6 =  0;\n        for (let i=0; i<tmp6; i++) {\n            rollHold6 = roll(6);\n            tempTotal6 = tempTotal6 + rollHold6;\n        }\n        const temp6 = rollHold6;\n        set6(temp6)\n        get6(tempTotal6+total6Value)\n    }\n    function setNow4() {\n        //const temp = document.getElementById(\"num4\")?.textContent;\n        const tmp4 = getNumber(num4, 1);\n        let tempTotal4 = 0;\n        let rollHold4 =  0;\n        for (let i=0; i<tmp4; i++) {\n            rollHold4 = roll(4);\n            tempTotal4 = tempTotal4 + rollHold4;\n        }\n        const temp4 = rollHold4;\n        set4(temp4)\n        get4(tempTotal4+total4Value)\n    }\n    return <Row>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number100\">d100</span>\n                </div>\n                <input id=\"num100\" type=\"text\" placeholder=\"1\" aria-label=\"number100\" aria-describedby=\"number100\" className=\"form-control\" onChange={(event) => setNum100(event.target.value)} value={num100}></input>\n            </div>\n            <Button data-testid=\"100-button\" onClick={setNow100} className=\"m-2\">d100</Button>\n        </Col>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number20\">d20</span>\n                </div>\n                <input id=\"num20\" type=\"text\" placeholder=\"1\" aria-label=\"number20\" aria-describedby=\"number20\" className=\"form-control\" onChange={(event) => setNum20(event.target.value)} value={num20}></input>\n            </div>\n            <Button data-testid=\"20-button\" onClick={setNow20} className=\"m-2\">d20</Button>\n        </Col>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number12\">d12</span>\n                </div>\n                <input id=\"num12\" type=\"text\" placeholder=\"1\" aria-label=\"number12\" aria-describedby=\"number12\" className=\"form-control\" onChange={(event) => setNum12(event.target.value)} value={num12}></input>\n            </div>\n            <Button data-testid=\"12-button\" onClick={setNow12} className=\"m-2\">d12</Button>\n        </Col>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number10\">d10</span>\n                </div>\n                <input id=\"num10\" type=\"text\" placeholder=\"1\" aria-label=\"number10\" aria-describedby=\"number10\" className=\"form-control\" onChange={(event) => setNum10(event.target.value)} value={num10}></input>\n            </div>\n            <Button data-testid=\"10-button\" onClick={setNow10} className=\"m-2\">d10</Button>\n        </Col>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number8\">d8</span>\n                </div>\n                <input id=\"num8\" type=\"text\" placeholder=\"1\" aria-label=\"number8\" aria-describedby=\"number8\" className=\"form-control\" onChange={(event) => setNum8(event.target.value)} value={num8}></input>\n            </div>\n            <Button data-testid=\"8-button\" onClick={setNow8} className=\"m-2\">d8</Button>\n        </Col>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number6\">d6</span>\n                </div>\n                <input id=\"num6\" type=\"text\" placeholder=\"1\" aria-label=\"number6\" aria-describedby=\"number6\" className=\"form-control\" onChange={(event) => setNum6(event.target.value)} value={num6}></input>\n            </div>\n            <Button data-testid=\"6-button\" onClick={setNow6} className=\"m-2\">d6</Button>\n        </Col>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"number4\">d4</span>\n                </div>\n                <input id=\"num4\" type=\"text\" placeholder=\"1\" aria-label=\"number4\" aria-describedby=\"number4\" className=\"form-control\" onChange={(event) => setNum4(event.target.value)} value={num4}></input>\n            </div>\n            <Button data-testid=\"4-button\" onClick={setNow4} className=\"m-2\">d4</Button>\n        </Col>\n    </Row>\n}","import { Button, Row, Col } from \"react-bootstrap\";\n\nexport function Resets ({set100, set20, set12, set10, set8, set6, set4}: {\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void\n}): JSX.Element {\n    function setNow100() {\n        set100(0)\n    }\n    function setNow20() {\n        set20(0)\n    }\n    function setNow12() {\n        set12(0)\n    }\n    function setNow10() {\n        set10(0)\n    }\n    function setNow8() {\n        set8(0)\n    }\n    function setNow6() {\n        set6(0)\n    }\n    function setNow4() {\n        set4(0)\n    }\n    return <Row>\n        <Col><Button data-testid=\"reset-100-button\" onClick={setNow100} className=\"m-2\">Reset d100</Button></Col>\n        <Col><Button data-testid=\"reset-20-button\" onClick={setNow20} className=\"m-2\">Reset d20</Button></Col>\n        <Col><Button data-testid=\"reset-12-button\" onClick={setNow12} className=\"m-2\">Reset d12</Button></Col>\n        <Col><Button data-testid=\"reset-10-button\" onClick={setNow10} className=\"m-2\">Reset d10</Button></Col>\n        <Col><Button data-testid=\"reset-8-button\" onClick={setNow8} className=\"m-2\">Reset d8</Button></Col>\n        <Col><Button data-testid=\"reset-6-button\" onClick={setNow6} className=\"m-2\">Reset d6</Button></Col>\n        <Col><Button data-testid=\"reset-4-button\" onClick={setNow4} className=\"m-2\">Reset d4</Button></Col>\n    </Row>\n}\n//<Col><Button data-testid=\"reset-main-button\" onClick={() => {setNow100(); setNow20(); setNow12(); setNow10(); setNow8(); setNow6(); setNow4();}} className=\"m-2\">Reset All</Button></Col>","import { Button, Row, Col } from \"react-bootstrap\";\n\nexport function ResetAll ({set100, set20, set12, set10, set8, set6, set4, get100, get20, get12, get10, get8, get6, get4}: {\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void,\n    get100: (num100: number) => void,\n    get20: (num20: number) => void,\n    get12: (num12: number) => void,\n    get10: (num10: number) => void,\n    get8: (num8: number) => void,\n    get6: (num6: number) => void,\n    get4: (num4: number) => void\n}): JSX.Element {\n    function setNow100() {\n        set100(0)\n    }\n    function setNow20() {\n        set20(0)\n    }\n    function setNow12() {\n        set12(0)\n    }\n    function setNow10() {\n        set10(0)\n    }\n    function setNow8() {\n        set8(0)\n    }\n    function setNow6() {\n        set6(0)\n    }\n    function setNow4() {\n        set4(0)\n    }\n    function setTotal100() {\n        get100(0)\n    }\n    function setTotal20() {\n        get20(0)\n    }\n    function setTotal12() {\n        get12(0)\n    }\n    function setTotal10() {\n        get10(0)\n    }\n    function setTotal8() {\n        get8(0)\n    }\n    function setTotal6() {\n        get6(0)\n    }\n    function setTotal4() {\n        get4(0)\n    }\n    return <Row>\n        <Row>\n        <Col><Button data-testid=\"reset-total-100-button\" onClick={setTotal100} className=\"m-2\">Reset 100 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-20-button\" onClick={setTotal20} className=\"m-2\">Reset 20 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-12-button\" onClick={setTotal12} className=\"m-2\">Reset 12 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-10-button\" onClick={setTotal10} className=\"m-2\">Reset 10 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-8-button\" onClick={setTotal8} className=\"m-2\">Reset 8 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-6-button\" onClick={setTotal6} className=\"m-2\">Reset 6 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-4-button\" onClick={setTotal4} className=\"m-2\">Reset 4 Total</Button></Col>\n        </Row>\n        <Row><Button data-testid=\"reset-all-button\" onClick={() => {setNow100(); setNow20(); setNow12(); setNow10(); setNow8(); setNow6(); setNow4(); setTotal100(); setTotal20(); setTotal12(); setTotal10(); setTotal8(); setTotal6(); setTotal4();}}>Reset All</Button></Row>\n    </Row>\n}\n//<Col><Button data-testid=\"reset-total-button\" onClick={() => {setTotal100(); setTotal20(); setTotal12(); setTotal10(); setTotal8(); setTotal6(); setTotal4();}} className=\"m-2\">Reset All</Button></Col>","import { Row, Col} from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nexport function TotalViewer ({total100Value, total20Value, total12Value, total10Value, total8Value, total6Value, total4Value}: {\n    total100Value: number,\n    total20Value: number,\n    total12Value: number,\n    total10Value: number,\n    total8Value: number,\n    total6Value: number,\n    total4Value: number\n}   ): JSX.Element {\n    function getNumber(value: string|null|undefined, defaultValue: number): number {\n        if (value != null) {\n            const num = parseInt(value, 10);\n            return isNaN(num) ? defaultValue : num;\n        }\n        else {\n            return defaultValue;\n        }\n    }\n\n    const temp = total100Value+total20Value+total12Value+total10Value+total8Value+total6Value+total4Value;\n\n    const [mod100, setMod100] = useState<string>(\"\");\n    const [mod20, setMod20] = useState<string>(\"\");\n    const [mod12, setMod12] = useState<string>(\"\");\n    const [mod10, setMod10] = useState<string>(\"\");\n    const [mod8, setMod8] = useState<string>(\"\");\n    const [mod6, setMod6] = useState<string>(\"\");\n    const [mod4, setMod4] = useState<string>(\"\");\n\n    //const [modTotal100, setTotalMod100] = useState<number>(0);\n    //const [modTotal20, setTotalMod20] = useState<number>(0);\n    //const [modTotal12, setTotalMod12] = useState<number>(0);\n    //const [modTotal10, setTotalMod10] = useState<number>(0);\n    //const [modTotal8, setTotalMod8] = useState<number>(0);\n    //const [modTotal6, setTotalMod6] = useState<number>(0);\n    //const [modTotal4, setTotalMod4] = useState<number>(0);\n\n    /*function modify100() {\n        const temp = getNumber(mod100, 0);\n        setTotalMod100(total100Value+temp);\n    }*/\n    \n    //const [zero100, reset100] = useState<number()\n    return <Row>\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded100\">Mod:</span>\n                </div>\n                <input id=\"mod100\" type=\"text\" placeholder=\"0\" aria-label=\"modded100\" aria-describedby=\"modded100\" className=\"form-control\" onChange={(event) => setMod100(event.target.value)} value={mod100}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-100\">{total100Value+getNumber(mod100,0)}</h3>\n        </Col>\n\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded20\">Mod:</span>\n                </div>\n                <input id=\"mod20\" type=\"text\" placeholder=\"0\" aria-label=\"modded20\" aria-describedby=\"modded20\" className=\"form-control\" onChange={(event) => setMod20(event.target.value)} value={mod20}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-20\">{total20Value+getNumber(mod20,0)}</h3>\n        </Col>\n\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded12\">Mod:</span>\n                </div>\n                <input id=\"mod12\" type=\"text\" placeholder=\"0\" aria-label=\"modded12\" aria-describedby=\"modded12\" className=\"form-control\" onChange={(event) => setMod12(event.target.value)} value={mod12}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-12\">{total12Value+getNumber(mod12,0)}</h3>\n        </Col>\n\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded10\">Mod:</span>\n                </div>\n                <input id=\"mod10\" type=\"text\" placeholder=\"0\" aria-label=\"modded10\" aria-describedby=\"modded10\" className=\"form-control\" onChange={(event) => setMod10(event.target.value)} value={mod10}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-10\">{total10Value+getNumber(mod10,0)}</h3>\n        </Col>\n\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded8\">Mod:</span>\n                </div>\n                <input id=\"mod8\" type=\"text\" placeholder=\"0\" aria-label=\"modded8\" aria-describedby=\"modded8\" className=\"form-control\" onChange={(event) => setMod8(event.target.value)} value={mod8}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-8\">{total8Value+getNumber(mod8,0)}</h3>\n        </Col>\n\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded6\">Mod:</span>\n                </div>\n                <input id=\"mod6\" type=\"text\" placeholder=\"0\" aria-label=\"modded6\" aria-describedby=\"modded6\" className=\"form-control\" onChange={(event) => setMod6(event.target.value)} value={mod6}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-6\">{total6Value+getNumber(mod6,0)}</h3>\n        </Col>\n\n        <Col>\n            <div className=\"input-group mb-1\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"modded4\">Mod:</span>\n                </div>\n                <input id=\"mod4\" type=\"text\" placeholder=\"0\" aria-label=\"modded4\" aria-describedby=\"modded4\" className=\"form-control\" onChange={(event) => setMod4(event.target.value)} value={mod4}></input>\n            </div>\n            <h3 className=\"text-center\" data-testid=\"total-4\">{total4Value+getNumber(mod4,0)}</h3>\n        </Col>\n\n        <Row>\n            <h1 className=\"text-center\" data-testid=\"total-total\">{temp+getNumber(mod100,0)+getNumber(mod20,0)+getNumber(mod12,0)+getNumber(mod10,0)+getNumber(mod8,0)+getNumber(mod6,0)+getNumber(mod4,0)}</h1>\n        </Row>\n    </Row>\n}","import React, { useState } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { DiceViewer } from './components/DiceViewer';\nimport { Row, Container } from 'react-bootstrap';\nimport { ControlPanel } from './components/ControlPanel';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Resets } from './components/Resets';\nimport { ResetAll } from './components/ResetAll';\nimport { TotalViewer } from './components/TotalViewer';\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\nfunction App(): JSX.Element {\n  const [now100, setNow100] = useState<number>(0);\n  const [now20, setNow20] = useState<number>(0);\n  const [now12, setNow12] = useState<number>(0);\n  const [now10, setNow10] = useState<number>(0);\n  const [now8, setNow8] = useState<number>(0);\n  const [now6, setNow6] = useState<number>(0);\n  const [now4, setNow4] = useState<number>(0);\n\n  const [total100, setTotal100] = useState<number>(0);\n  const [total20, setTotal20] = useState<number>(0);\n  const [total12, setTotal12] = useState<number>(0);\n  const [total10, setTotal10] = useState<number>(0);\n  const [total8, setTotal8] = useState<number>(0);\n  const [total6, setTotal6] = useState<number>(0);\n  const [total4, setTotal4] = useState<number>(0);\n\n  return (\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://cdn.discordapp.com/attachments/626217927858716674/887431019001688094/buffering.png\" className=\"App-logo\" alt=\"\" />\n        <p>\n          This app is unfinished.\n        </p>\n        <p>Enjoy my confused face spinning slightly slower than the default.</p>\n      </header>\n      \n    </div>*/\n    <Container>\n      <Row>\n      <DiceViewer rolled100Value={now100} rolled20Value={now20} rolled12Value={now12} rolled10Value={now10} rolled8Value={now8} rolled6Value={now6} rolled4Value={now4}></DiceViewer>\n      <ControlPanel total100Value={total100} total20Value={total20} total12Value={total12} total10Value={total10} total8Value={total8} total6Value={total6} total4Value={total4} set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4} get100={setTotal100} get20={setTotal20} get12={setTotal12} get10={setTotal10} get8={setTotal8} get6={setTotal6} get4={setTotal4}></ControlPanel>\n      <Resets set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4}></Resets>\n      <TotalViewer total100Value={total100} total20Value={total20} total12Value={total12} total10Value={total10} total8Value={total8} total6Value={total6} total4Value={total4}></TotalViewer>\n      <ResetAll set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4} get100={setTotal100} get20={setTotal20} get12={setTotal12} get10={setTotal10} get8={setTotal8} get6={setTotal6} get4={setTotal4}></ResetAll>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}