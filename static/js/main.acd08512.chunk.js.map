{"version":3,"sources":["components/DiceViewer.tsx","utilities/data.ts","components/ControlPanel.tsx","components/Resets.tsx","components/ResetAll.tsx","components/TotalViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DiceViewer","rolled100Value","rolled20Value","rolled12Value","rolled10Value","rolled8Value","rolled6Value","rolled4Value","Row","Col","className","roll","sides","Math","floor","random","ControlPanel","total100Value","total20Value","total12Value","total10Value","total8Value","total6Value","total4Value","set100","set20","set12","set10","set8","set6","set4","get100","get20","get12","get10","get8","get6","get4","Button","onClick","temp100","temp20","temp12","temp10","temp8","temp6","temp4","Resets","ResetAll","setTotal100","setTotal20","setTotal12","setTotal10","setTotal8","setTotal6","setTotal4","TotalViewer","temp","App","useState","now100","setNow100","now20","setNow20","now12","setNow12","now10","setNow10","now8","setNow8","now6","setNow6","now4","setNow4","total100","total20","total12","total10","total8","total6","total4","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acd08512.chunk.js","sourcesContent":["import { Row, Col} from \"react-bootstrap\";\n//import { useState } from \"react\";\n\nexport function DiceViewer ({rolled100Value, rolled20Value, rolled12Value, rolled10Value, rolled8Value, rolled6Value, rolled4Value}: {\n    rolled100Value: number,\n    rolled20Value: number,\n    rolled12Value: number,\n    rolled10Value: number,\n    rolled8Value: number,\n    rolled6Value: number,\n    rolled4Value: number\n}   ): JSX.Element {\n    //const [zero100, reset100] = useState<number()\n    return <Row>\n        <Col><h3 className=\"text-center\" data-testid=\"100\">{rolled100Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"20\">{rolled20Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"12\">{rolled12Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"10\">{rolled10Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"8\">{rolled8Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"6\">{rolled6Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"4\">{rolled4Value}</h3></Col>\n    </Row>\n}","// picks a random number?\nexport function roll (sides: number): number {\n    return Math.floor(Math.random()*sides)+1;\n}","import { Button, Row, Col} from 'react-bootstrap';\n//import { Die } from '../interfaces/die';\nimport { roll } from '../utilities/data';\n//import { useState } from 'react';\n\nexport function ControlPanel ({total100Value, total20Value, total12Value, total10Value, total8Value, total6Value, total4Value, set100, set20, set12, set10, set8, set6, set4, get100, get20, get12, get10, get8, get6, get4}:\n{\n    total100Value: number,\n    total20Value: number,\n    total12Value: number,\n    total10Value: number,\n    total8Value: number,\n    total6Value: number,\n    total4Value: number,\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void,\n    get100: (num100: number) => void,\n    get20: (num20: number) => void,\n    get12: (num12: number) => void,\n    get10: (num10: number) => void,\n    get8: (num8: number) => void,\n    get6: (num6: number) => void,\n    get4: (num4: number) => void\n}): JSX.Element {\n    function setNow100() {\n        const temp100 = roll(100);\n        set100(temp100)\n        get100(temp100+total100Value)\n    }\n    function setNow20() {\n        const temp20 = roll(20);\n        set20(temp20)\n        get20(temp20+total20Value)\n    }\n    function setNow12() {\n        const temp12 = roll(12);\n        set12(temp12)\n        get12(temp12+total12Value)\n    }\n    function setNow10() {\n        const temp10 = roll(10);\n        set10(temp10)\n        get10(temp10+total10Value)\n    }\n    function setNow8() {\n        const temp8 = roll(8);\n        set8(temp8)\n        get8(temp8+total8Value)\n    }\n    function setNow6() {\n        const temp6 = roll(6);\n        set6(temp6)\n        get6(temp6+total6Value)\n    }\n    function setNow4() {\n        const temp4 = roll(4);\n        set4(temp4)\n        get4(temp4+total4Value)\n    }\n    return <Row>\n        <Col><Button data-testid=\"100-button\" onClick={setNow100} className=\"m-2\">d100</Button></Col>\n        <Col><Button data-testid=\"20-button\" onClick={setNow20} className=\"m-2\">d20</Button></Col>\n        <Col><Button data-testid=\"12-button\" onClick={setNow12} className=\"m-2\">d12</Button></Col>\n        <Col><Button data-testid=\"10-button\" onClick={setNow10} className=\"m-2\">d10</Button></Col>\n        <Col><Button data-testid=\"8-button\" onClick={setNow8} className=\"m-2\">d8</Button></Col>\n        <Col><Button data-testid=\"6-button\" onClick={setNow6} className=\"m-2\">d6</Button></Col>\n        <Col><Button data-testid=\"4-button\" onClick={setNow4} className=\"m-2\">d4</Button></Col>\n        </Row>\n}","import { Button, Row, Col } from \"react-bootstrap\";\n\nexport function Resets ({set100, set20, set12, set10, set8, set6, set4}: {\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void\n}): JSX.Element {\n    function setNow100() {\n        set100(0)\n    }\n    function setNow20() {\n        set20(0)\n    }\n    function setNow12() {\n        set12(0)\n    }\n    function setNow10() {\n        set10(0)\n    }\n    function setNow8() {\n        set8(0)\n    }\n    function setNow6() {\n        set6(0)\n    }\n    function setNow4() {\n        set4(0)\n    }\n    return <Row>\n        <Col><Button data-testid=\"reset-100-button\" onClick={setNow100} className=\"m-2\">Reset d100</Button></Col>\n        <Col><Button data-testid=\"reset-20-button\" onClick={setNow20} className=\"m-2\">Reset d20</Button></Col>\n        <Col><Button data-testid=\"reset-12-button\" onClick={setNow12} className=\"m-2\">Reset d12</Button></Col>\n        <Col><Button data-testid=\"reset-10-button\" onClick={setNow10} className=\"m-2\">Reset d10</Button></Col>\n        <Col><Button data-testid=\"reset-8-button\" onClick={setNow8} className=\"m-2\">Reset d8</Button></Col>\n        <Col><Button data-testid=\"reset-6-button\" onClick={setNow6} className=\"m-2\">Reset d6</Button></Col>\n        <Col><Button data-testid=\"reset-4-button\" onClick={setNow4} className=\"m-2\">Reset d4</Button></Col>\n    </Row>\n}\n//<Col><Button data-testid=\"reset-main-button\" onClick={() => {setNow100(); setNow20(); setNow12(); setNow10(); setNow8(); setNow6(); setNow4();}} className=\"m-2\">Reset All</Button></Col>","import { Button, Row, Col } from \"react-bootstrap\";\n\nexport function ResetAll ({set100, set20, set12, set10, set8, set6, set4, get100, get20, get12, get10, get8, get6, get4}: {\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void,\n    get100: (num100: number) => void,\n    get20: (num20: number) => void,\n    get12: (num12: number) => void,\n    get10: (num10: number) => void,\n    get8: (num8: number) => void,\n    get6: (num6: number) => void,\n    get4: (num4: number) => void\n}): JSX.Element {\n    function setNow100() {\n        set100(0)\n    }\n    function setNow20() {\n        set20(0)\n    }\n    function setNow12() {\n        set12(0)\n    }\n    function setNow10() {\n        set10(0)\n    }\n    function setNow8() {\n        set8(0)\n    }\n    function setNow6() {\n        set6(0)\n    }\n    function setNow4() {\n        set4(0)\n    }\n    function setTotal100() {\n        get100(0)\n    }\n    function setTotal20() {\n        get20(0)\n    }\n    function setTotal12() {\n        get12(0)\n    }\n    function setTotal10() {\n        get10(0)\n    }\n    function setTotal8() {\n        get8(0)\n    }\n    function setTotal6() {\n        get6(0)\n    }\n    function setTotal4() {\n        get4(0)\n    }\n    return <Row>\n        <Row>\n        <Col><Button data-testid=\"reset-total-100-button\" onClick={setTotal100} className=\"m-2\">Reset 100 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-20-button\" onClick={setTotal20} className=\"m-2\">Reset 20 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-12-button\" onClick={setTotal12} className=\"m-2\">Reset 12 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-10-button\" onClick={setTotal10} className=\"m-2\">Reset 10 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-8-button\" onClick={setTotal8} className=\"m-2\">Reset 8 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-6-button\" onClick={setTotal6} className=\"m-2\">Reset 6 Total</Button></Col>\n        <Col><Button data-testid=\"reset-total-4-button\" onClick={setTotal4} className=\"m-2\">Reset 4 Total</Button></Col>\n        </Row>\n        <Row><Button data-testid=\"reset-all-button\" onClick={() => {setNow100(); setNow20(); setNow12(); setNow10(); setNow8(); setNow6(); setNow4(); setTotal100(); setTotal20(); setTotal12(); setTotal10(); setTotal8(); setTotal6(); setTotal4();}}>Reset All</Button></Row>\n    </Row>\n}\n//<Col><Button data-testid=\"reset-total-button\" onClick={() => {setTotal100(); setTotal20(); setTotal12(); setTotal10(); setTotal8(); setTotal6(); setTotal4();}} className=\"m-2\">Reset All</Button></Col>","import { Row, Col} from \"react-bootstrap\";\n//import { useState } from \"react\";\n\nexport function TotalViewer ({total100Value, total20Value, total12Value, total10Value, total8Value, total6Value, total4Value}: {\n    total100Value: number,\n    total20Value: number,\n    total12Value: number,\n    total10Value: number,\n    total8Value: number,\n    total6Value: number,\n    total4Value: number\n}   ): JSX.Element {\n    const temp = total100Value+total20Value+total12Value+total10Value+total8Value+total6Value+total4Value;\n    //const [zero100, reset100] = useState<number()\n    return <Row>\n        <Col><h3 className=\"text-center\" data-testid=\"total-100\">{total100Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"total-20\">{total20Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"total-12\">{total12Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"total-10\">{total10Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"total-8\">{total8Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"total-6\">{total6Value}</h3></Col>\n        <Col><h3 className=\"text-center\" data-testid=\"total-4\">{total4Value}</h3></Col>\n        <Row>\n            <h1 className=\"text-center\" data-testid=\"total-total\">{temp}</h1>\n        </Row>\n    </Row>\n}","import React, { useState } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { DiceViewer } from './components/DiceViewer';\nimport { Row, Container } from 'react-bootstrap';\nimport { ControlPanel } from './components/ControlPanel';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Resets } from './components/Resets';\nimport { ResetAll } from './components/ResetAll';\nimport { TotalViewer } from './components/TotalViewer';\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\nfunction App(): JSX.Element {\n  const [now100, setNow100] = useState<number>(0);\n  const [now20, setNow20] = useState<number>(0);\n  const [now12, setNow12] = useState<number>(0);\n  const [now10, setNow10] = useState<number>(0);\n  const [now8, setNow8] = useState<number>(0);\n  const [now6, setNow6] = useState<number>(0);\n  const [now4, setNow4] = useState<number>(0);\n  const [total100, setTotal100] = useState<number>(0);\n  const [total20, setTotal20] = useState<number>(0);\n  const [total12, setTotal12] = useState<number>(0);\n  const [total10, setTotal10] = useState<number>(0);\n  const [total8, setTotal8] = useState<number>(0);\n  const [total6, setTotal6] = useState<number>(0);\n  const [total4, setTotal4] = useState<number>(0);\n\n  return (\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://cdn.discordapp.com/attachments/626217927858716674/887431019001688094/buffering.png\" className=\"App-logo\" alt=\"\" />\n        <p>\n          This app is unfinished.\n        </p>\n        <p>Enjoy my confused face spinning slightly slower than the default.</p>\n      </header>\n      \n    </div>*/\n    <Container>\n      <Row>\n      <DiceViewer rolled100Value={now100} rolled20Value={now20} rolled12Value={now12} rolled10Value={now10} rolled8Value={now8} rolled6Value={now6} rolled4Value={now4}></DiceViewer>\n      <ControlPanel total100Value={total100} total20Value={total20} total12Value={total12} total10Value={total10} total8Value={total8} total6Value={total6} total4Value={total4} set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4} get100={setTotal100} get20={setTotal20} get12={setTotal12} get10={setTotal10} get8={setTotal8} get6={setTotal6} get4={setTotal4}></ControlPanel>\n      <Resets set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4}></Resets>\n      <TotalViewer total100Value={total100} total20Value={total20} total12Value={total12} total10Value={total10} total8Value={total8} total6Value={total6} total4Value={total4}></TotalViewer>\n      <ResetAll set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4} get100={setTotal100} get20={setTotal20} get12={setTotal12} get10={setTotal10} get8={setTotal8} get6={setTotal6} get4={setTotal4}></ResetAll>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}