{"version":3,"sources":["components/DiceViewer.tsx","utilities/data.ts","components/ControlPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DiceViewer","rolled100Value","rolled20Value","rolled12Value","rolled10Value","rolled8Value","rolled6Value","rolled4Value","Row","roll","sides","Math","floor","random","ControlPanel","set100","set20","set12","set10","set8","set6","set4","Button","onClick","className","App","useState","now100","setNow100","now20","setNow20","now12","setNow12","now10","setNow10","now8","setNow8","now6","setNow6","now4","setNow4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEO,SAASA,EAAT,GAQa,IARSC,EAQV,EARUA,eAAgBC,EAQ1B,EAR0BA,cAAeC,EAQzC,EARyCA,cAAeC,EAQxD,EARwDA,cAAeC,EAQvE,EARuEA,aAAcC,EAQrF,EARqFA,aAAcC,EAQnG,EARmGA,aASlH,OAAO,eAACC,EAAA,EAAD,WACH,iCAASP,IACT,iCAASC,IACT,iCAASC,IACT,iCAASC,IACT,iCAASC,IACT,iCAASC,IACT,iCAASC,O,YCjBV,SAASE,EAAMC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAASH,GCG7B,SAASI,EAAT,GASU,IATcC,EASf,EATeA,OAAQC,EASvB,EATuBA,MAAOC,EAS9B,EAT8BA,MAAOC,EASrC,EATqCA,MAAOC,EAS5C,EAT4CA,KAAMC,EASlD,EATkDA,KAAMC,EASxD,EATwDA,KA+BpE,OAAO,eAACb,EAAA,EAAD,WACH,cAACc,EAAA,EAAD,CAAQ,cAAY,aAAaC,QAtBrC,WACIR,EAAON,EAAK,OAqByCe,UAAU,MAA/D,kBACA,cAACF,EAAA,EAAD,CAAQ,cAAY,YAAYC,QApBpC,WACIP,EAAMP,EAAK,MAmBwCe,UAAU,MAA7D,iBACA,cAACF,EAAA,EAAD,CAAQ,cAAY,YAAYC,QAlBpC,WACIN,EAAMR,EAAK,MAiBwCe,UAAU,MAA7D,iBACA,cAACF,EAAA,EAAD,CAAQ,cAAY,YAAYC,QAhBpC,WACIL,EAAMT,EAAK,MAewCe,UAAU,MAA7D,iBACA,cAACF,EAAA,EAAD,CAAQ,cAAY,WAAWC,QAdnC,WACIJ,EAAKV,EAAK,KAauCe,UAAU,MAA3D,gBACA,cAACF,EAAA,EAAD,CAAQ,cAAY,WAAWC,QAZnC,WACIH,EAAKX,EAAK,KAWuCe,UAAU,MAA3D,gBACA,cAACF,EAAA,EAAD,CAAQ,cAAY,WAAWC,QAVnC,WACIF,EAAKZ,EAAK,KASuCe,UAAU,MAA3D,mBCYOC,MAzBf,WACE,MAA4BC,mBAAiB,GAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAiB,GAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAiB,GAA3C,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAiB,GAA3C,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwBR,mBAAiB,GAAzC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAwBV,mBAAiB,GAAzC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,mBAAiB,GAAzC,mBAAOa,EAAP,KAAaC,EAAb,KACA,OAUE,cATA,CASChC,EAAA,EAAD,WACE,cAACR,EAAD,CAAYC,eAAgB0B,EAAQzB,cAAe2B,EAAO1B,cAAe4B,EAAO3B,cAAe6B,EAAO5B,aAAc8B,EAAM7B,aAAc+B,EAAM9B,aAAcgC,IAC5J,cAACzB,EAAD,CAAcC,OAAQa,EAAWZ,MAAOc,EAAUb,MAAOe,EAAUd,MAAOgB,EAAUf,KAAMiB,EAAShB,KAAMkB,EAASjB,KAAMmB,QCpC/GC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3392140a.chunk.js","sourcesContent":["import { Row } from \"react-bootstrap\";\n\nexport function DiceViewer ({rolled100Value, rolled20Value, rolled12Value, rolled10Value, rolled8Value, rolled6Value, rolled4Value}: {\n    rolled100Value: number,\n    rolled20Value: number,\n    rolled12Value: number,\n    rolled10Value: number,\n    rolled8Value: number,\n    rolled6Value: number,\n    rolled4Value: number\n}   ): JSX.Element {\n    return <Row>\n        <strong>{rolled100Value}</strong>  \n        <strong>{rolled20Value}</strong>  \n        <strong>{rolled12Value}</strong>  \n        <strong>{rolled10Value}</strong>  \n        <strong>{rolled8Value}</strong>  \n        <strong>{rolled6Value}</strong>  \n        <strong>{rolled4Value}</strong>\n    </Row>\n}","// picks a random number?\nexport function roll (sides: number): number {\n    return Math.floor(Math.random()*sides);\n}","import { Button, Row} from 'react-bootstrap';\n//import { Die } from '../interfaces/die';\nimport { roll } from '../utilities/data';\n//import { useState } from 'react';\n\nexport function ControlPanel ({set100, set20, set12, set10, set8, set6, set4}:\n{\n    set100: (num100: number) => void,\n    set20: (num20: number) => void,\n    set12: (num12: number) => void,\n    set10: (num10: number) => void,\n    set8: (num8: number) => void,\n    set6: (num6: number) => void,\n    set4: (num4: number) => void\n}): JSX.Element {\n    function setNow100() {\n        set100(roll(100))\n    }\n    function setNow20() {\n        set20(roll(20))\n    }\n    function setNow12() {\n        set12(roll(12))\n    }\n    function setNow10() {\n        set10(roll(10))\n    }\n    function setNow8() {\n        set8(roll(8))\n    }\n    function setNow6() {\n        set6(roll(6))\n    }\n    function setNow4() {\n        set4(roll(4))\n    }\n    return <Row>\n        <Button data-testid=\"100-button\" onClick={setNow100} className=\"m-2\">d100</Button>\n        <Button data-testid=\"20-button\" onClick={setNow20} className=\"m-2\">d20</Button>\n        <Button data-testid=\"12-button\" onClick={setNow12} className=\"m-2\">d12</Button>\n        <Button data-testid=\"10-button\" onClick={setNow10} className=\"m-2\">d10</Button>\n        <Button data-testid=\"8-button\" onClick={setNow8} className=\"m-2\">d8</Button>\n        <Button data-testid=\"6-button\" onClick={setNow6} className=\"m-2\">d6</Button>\n        <Button data-testid=\"4-button\" onClick={setNow4} className=\"m-2\">d4</Button>\n        </Row>\n}","import React, { useState } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { DiceViewer } from './components/DiceViewer';\nimport { Row } from 'react-bootstrap';\nimport { ControlPanel } from './components/ControlPanel';\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\nfunction App(): JSX.Element {\n  const [now100, setNow100] = useState<number>(0);\n  const [now20, setNow20] = useState<number>(0);\n  const [now12, setNow12] = useState<number>(0);\n  const [now10, setNow10] = useState<number>(0);\n  const [now8, setNow8] = useState<number>(0);\n  const [now6, setNow6] = useState<number>(0);\n  const [now4, setNow4] = useState<number>(0);\n  return (\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://cdn.discordapp.com/attachments/626217927858716674/887431019001688094/buffering.png\" className=\"App-logo\" alt=\"\" />\n        <p>\n          This app is unfinished.\n        </p>\n        <p>Enjoy my confused face spinning slightly slower than the default.</p>\n      </header>\n    </div>*/\n    <Row>\n      <DiceViewer rolled100Value={now100} rolled20Value={now20} rolled12Value={now12} rolled10Value={now10} rolled8Value={now8} rolled6Value={now6} rolled4Value={now4}></DiceViewer>\n      <ControlPanel set100={setNow100} set20={setNow20} set12={setNow12} set10={setNow10} set8={setNow8} set6={setNow6} set4={setNow4}></ControlPanel>\n    </Row>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}